name: build-on-self-hosted-runner
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths-ignore:
      - "**.md"
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"
env:
  CARGO_TERM_COLOR: always
  GCP_ZONE: europe-west3-a

jobs:
  create-runner:
    runs-on: ubuntu-latest
    outputs:
      label: ${{ steps.create-runner.outputs.label }}
    steps:
      - id: create-runner
        uses: related-sciences/gce-github-runner@v0.10
        with:
          token: ${{ secrets.GH_SA_TOKEN }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          image_project: ubuntu-os-cloud
          image_family: ubuntu-2004-lts
          machine_type: e2-highcpu-32
          disk_size: 100
          machine_zone: ${{ env.GCP_ZONE }}
          ephemeral: true

  cargo-fmt:
    needs: create-runner
      runs-on: ${{ needs.create-runner.outputs.label }}
      steps:
      - uses: actions/checkout@v4

      - name: Set HOME
        run: echo "HOME=/home/ubuntu" >> ${GITHUB_ENV}

      - name: Install minimal nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-22
          target: wasm32-unknown-unknown
          override: true
          components: rustfmt, clippy
      
      - name: ðŸ«  rustfmt ðŸ« 
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --check

  test-features:
      needs: create-runner
      runs-on: ${{ needs.create-runner.outputs.label }}
      steps:
      - uses: actions/checkout@v4

      - name: Set HOME
        run: echo "HOME=/home/ubuntu" >> ${GITHUB_ENV}

      - name: Install minimal nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-22
          target: wasm32-unknown-unknown
          override: true

      - name: Install Dependencies
        run: sudo apt install protobuf-compiler clang build-essential -y

      - name: Run tests with benchmarks
        run: cargo test --features runtime-benchmarks

  try-runtime:
      needs: create-runner
      runs-on: ${{ needs.create-runner.outputs.label }}
      steps:
      - uses: actions/checkout@v4

      - name: Set HOME
        run: echo "HOME=/home/ubuntu" >> ${GITHUB_ENV}

      - name: Install minimal nightly Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly-2023-05-22
          target: wasm32-unknown-unknown
          override: true

      - name: Install Dependencies
        run: sudo apt install protobuf-compiler clang build-essential -y

      - name: Install try-runtime cli
        run: cargo install --git https://github.com/paritytech/try-runtime-cli --locked

      - name: build with try-runtime
        run: cargo build --release --features try-runtime

      - name: try-runtime kusama
        run: try-runtime --runtime target/release/wbuild/imbue-kusama-runtime/imbue_kusama_runtime.wasm on-runtime-upgrade live --uri ws://34.123.139.91:9942
      
      - name: try-runtime rococo
        run: try-runtime --runtime target/release/wbuild/imbue-kusama-runtime/imbue_kusama_runtime.wasm on-runtime-upgrade live --uri ws://35.202.116.137:9942