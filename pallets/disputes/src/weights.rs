
//! Autogenerated weights for `pallet_disputes`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-11-23, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `user`, CPU: `12th Gen Intel(R) Core(TM) i9-12900H`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("local"), DB CACHE: 1024

// Executed Command:
// ./target/debug/imbue
// benchmark
// pallet
// --chain
// local
// --execution
// wasm
// --wasm-execution
// compiled
// --pallet
// pallet-disputes
// --extrinsic
// *
// --output
// weights.rs
// --steps
// 50
// --repeat
// 20

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::Weight};
use core::marker::PhantomData;

/// Weight functions for `pallet_disputes`.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> pallet_disputes::WeightInfoT for WeightInfo<T> {
	/// Storage: ImbueDisputes Disputes (r:1 w:1)
	/// Proof: ImbueDisputes Disputes (max_values: None, max_size: Some(6762), added: 9237, mode: MaxEncodedLen)
	/// Storage: ImbueDisputes DisputesFinaliseOn (r:1 w:1)
	/// Proof: ImbueDisputes DisputesFinaliseOn (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	fn raise_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `10227`
		// Minimum execution time: 427_950_000 picoseconds.
		Weight::from_parts(487_417_000, 0)
			.saturating_add(Weight::from_parts(0, 10227))
			.saturating_add(T::DbWeight::get().reads(2))
			.saturating_add(T::DbWeight::get().writes(2))
	}
	/// Storage: ImbueDisputes Disputes (r:1 w:1)
	/// Proof: ImbueDisputes Disputes (max_values: None, max_size: Some(6762), added: 9237, mode: MaxEncodedLen)
	/// Storage: ImbueDisputes DisputesFinaliseOn (r:2 w:2)
	/// Proof: ImbueDisputes DisputesFinaliseOn (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	fn extend_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `250`
		//  Estimated: `10227`
		// Minimum execution time: 531_852_000 picoseconds.
		Weight::from_parts(536_740_000, 0)
			.saturating_add(Weight::from_parts(0, 10227))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(3))
	}
	/// Storage: ImbueDisputes Disputes (r:1 w:1)
	/// Proof: ImbueDisputes Disputes (max_values: None, max_size: Some(6762), added: 9237, mode: MaxEncodedLen)
	/// Storage: ImbueDisputes DisputesFinaliseOn (r:1 w:1)
	/// Proof: ImbueDisputes DisputesFinaliseOn (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	/// Storage: ImbueProposals Projects (r:1 w:1)
	/// Proof: ImbueProposals Projects (max_values: None, max_size: Some(3284392), added: 3286867, mode: MaxEncodedLen)
	/// Storage: ImbueProposals ProjectsInDispute (r:0 w:1)
	/// Proof: ImbueProposals ProjectsInDispute (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	fn vote_on_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `3287857`
		// Minimum execution time: 327_261_000 picoseconds.
		Weight::from_parts(782_582_000, 0)
			.saturating_add(Weight::from_parts(0, 3287857))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: ImbueDisputes Disputes (r:1 w:1)
	/// Proof: ImbueDisputes Disputes (max_values: None, max_size: Some(6762), added: 9237, mode: MaxEncodedLen)
	/// Storage: ImbueDisputes DisputesFinaliseOn (r:1 w:1)
	/// Proof: ImbueDisputes DisputesFinaliseOn (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	/// Storage: ImbueProposals Projects (r:1 w:1)
	/// Proof: ImbueProposals Projects (max_values: None, max_size: Some(3284392), added: 3286867, mode: MaxEncodedLen)
	/// Storage: ImbueProposals ProjectsInDispute (r:0 w:1)
	/// Proof: ImbueProposals ProjectsInDispute (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	fn force_fail_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `3287857`
		// Minimum execution time: 262_013_000 picoseconds.
		Weight::from_parts(273_507_000, 0)
			.saturating_add(Weight::from_parts(0, 3287857))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	/// Storage: ImbueDisputes Disputes (r:1 w:1)
	/// Proof: ImbueDisputes Disputes (max_values: None, max_size: Some(6762), added: 9237, mode: MaxEncodedLen)
	/// Storage: ImbueDisputes DisputesFinaliseOn (r:1 w:1)
	/// Proof: ImbueDisputes DisputesFinaliseOn (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	/// Storage: ImbueProposals Projects (r:1 w:1)
	/// Proof: ImbueProposals Projects (max_values: None, max_size: Some(3284392), added: 3286867, mode: MaxEncodedLen)
	/// Storage: ImbueProposals ProjectsInDispute (r:0 w:1)
	/// Proof: ImbueProposals ProjectsInDispute (max_values: None, max_size: Some(221), added: 2696, mode: MaxEncodedLen)
	fn force_succeed_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `3287857`
		// Minimum execution time: 248_587_000 picoseconds.
		Weight::from_parts(250_775_000, 0)
			.saturating_add(Weight::from_parts(0, 3287857))
			.saturating_add(T::DbWeight::get().reads(3))
			.saturating_add(T::DbWeight::get().writes(4))
	}
	fn calculate_winner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 11_804_000 picoseconds.
		Weight::from_parts(13_239_000, 0)
			.saturating_add(Weight::from_parts(0, 0))
	}
}
