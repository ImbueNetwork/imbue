
//! Autogenerated weights for `pallet_disputes`
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 4.0.0-dev
//! DATE: 2023-12-08, STEPS: `50`, REPEAT: `20`, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! WORST CASE MAP SIZE: `1000000`
//! HOSTNAME: `user`, CPU: `12th Gen Intel(R) Core(TM) i9-12900H`
//! WASM-EXECUTION: `Compiled`, CHAIN: `Some("imbue-dev")`, DB CACHE: `1024`

// Executed Command:
// ./target/debug/imbue
// benchmark
// pallet
// --chain=imbue-dev
// --steps=50
// --repeat=20
// --pallet=pallet_disputes
// --extrinsic=*
// --output=./pallets/disputes/src/weights.rs
// --template=./scripts/frame-weight-template.hbs

#![cfg_attr(rustfmt, rustfmt_skip)]
#![allow(unused_parens)]
#![allow(unused_imports)]
#![allow(missing_docs)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use core::marker::PhantomData;
use crate::WeightInfoT;

/// Weights for `pallet_disputes` using the Substrate node and recommended hardware.
pub struct WeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfoT for WeightInfo<T> {
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	fn raise_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `10067`
		// Minimum execution time: 340_503_000 picoseconds.
		Weight::from_parts(358_302_000, 10067)
			.saturating_add(T::DbWeight::get().reads(2_u64))
			.saturating_add(T::DbWeight::get().writes(2_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:2 w:2)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	fn extend_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `250`
		//  Estimated: `10067`
		// Minimum execution time: 551_429_000 picoseconds.
		Weight::from_parts(585_951_000, 10067)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(3_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn vote_on_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 801_226_000 picoseconds.
		Weight::from_parts(966_473_000, 39815)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn force_fail_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 551_249_000 picoseconds.
		Weight::from_parts(557_828_000, 39815)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn force_succeed_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 582_194_000 picoseconds.
		Weight::from_parts(654_873_000, 39815)
			.saturating_add(T::DbWeight::get().reads(3_u64))
			.saturating_add(T::DbWeight::get().writes(4_u64))
	}
	fn calculate_winner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 26_642_000 picoseconds.
		Weight::from_parts(28_049_000, 0)
	}
}

// For backwards compatibility and tests.
impl WeightInfoT for () {
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	fn raise_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `76`
		//  Estimated: `10067`
		// Minimum execution time: 340_503_000 picoseconds.
		Weight::from_parts(358_302_000, 10067)
			.saturating_add(RocksDbWeight::get().reads(2_u64))
			.saturating_add(RocksDbWeight::get().writes(2_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:2 w:2)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	fn extend_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `250`
		//  Estimated: `10067`
		// Minimum execution time: 551_429_000 picoseconds.
		Weight::from_parts(585_951_000, 10067)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(3_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn vote_on_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 801_226_000 picoseconds.
		Weight::from_parts(966_473_000, 39815)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn force_fail_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 551_249_000 picoseconds.
		Weight::from_parts(557_828_000, 39815)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	/// Storage: `ImbueDisputes::Disputes` (r:1 w:1)
	/// Proof: `ImbueDisputes::Disputes` (`max_values`: None, `max_size`: Some(6602), added: 9077, mode: `MaxEncodedLen`)
	/// Storage: `ImbueDisputes::DisputesFinaliseOn` (r:1 w:1)
	/// Proof: `ImbueDisputes::DisputesFinaliseOn` (`max_values`: None, `max_size`: Some(221), added: 2696, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::Projects` (r:1 w:1)
	/// Proof: `ImbueProposals::Projects` (`max_values`: None, `max_size`: Some(36350), added: 38825, mode: `MaxEncodedLen`)
	/// Storage: `ImbueProposals::ProjectsInDispute` (r:0 w:1)
	/// Proof: `ImbueProposals::ProjectsInDispute` (`max_values`: None, `max_size`: Some(61), added: 2536, mode: `MaxEncodedLen`)
	fn force_succeed_dispute() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `292`
		//  Estimated: `39815`
		// Minimum execution time: 582_194_000 picoseconds.
		Weight::from_parts(654_873_000, 39815)
			.saturating_add(RocksDbWeight::get().reads(3_u64))
			.saturating_add(RocksDbWeight::get().writes(4_u64))
	}
	fn calculate_winner() -> Weight {
		// Proof Size summary in bytes:
		//  Measured:  `0`
		//  Estimated: `0`
		// Minimum execution time: 26_642_000 picoseconds.
		Weight::from_parts(28_049_000, 0)
	}
}